// <auto-generated />
using System;
using FizzBuzzGameApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FizzBuzzGameApi.Migrations
{
    [DbContext(typeof(FizzBuzzDbContext))]
    [Migration("20250702114528_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("GameDefinition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("MaxNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MinNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("GameDefinitions");
                });

            modelBuilder.Entity("GameRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Divisor")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GameDefinitionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Word")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GameDefinitionId");

                    b.ToTable("GameRules");
                });

            modelBuilder.Entity("GameSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DurationSeconds")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GameDefinitionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NumbersServed")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ScoreCorrect")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ScoreIncorrect")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GameDefinitionId");

                    b.ToTable("GameSessions");
                });

            modelBuilder.Entity("GameRule", b =>
                {
                    b.HasOne("GameDefinition", "GameDefinition")
                        .WithMany("Rules")
                        .HasForeignKey("GameDefinitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameDefinition");
                });

            modelBuilder.Entity("GameSession", b =>
                {
                    b.HasOne("GameDefinition", "GameDefinition")
                        .WithMany()
                        .HasForeignKey("GameDefinitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameDefinition");
                });

            modelBuilder.Entity("GameDefinition", b =>
                {
                    b.Navigation("Rules");
                });
#pragma warning restore 612, 618
        }
    }
}
